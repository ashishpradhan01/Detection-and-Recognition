import sys
import time
import cv2
import os
cam = cv2.VideoCapture(0)
cam.set(3, 640) # set video width
cam.set(4, 480) # set video height

face_classifier = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')

face_id = input('\n enter user id end press <return> ==>  ')# For each person, enter one numeric face id
print("\n [INFO] Initializing face capture. Look the camera and wait ...")# Initialize individual sampling face count

def face_extractor(img):
    gray_img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    get_face = face_classifier.detectMultiScale(gray_img, 1.3, 5)

    if len(get_face) ==0:
        return None,None

    for (x,y,w,h) in get_face:
        cv2.rectangle(img, (x,y), (x+w,y+h), (255,0,0), 2)
        roi_img = img[y:y+h,x:x+w]
        roi_gray = gray_img[y:y+h,x:x+w]

    return roi_gray,roi_img

count = 0

while(True):
    ret, img = cam.read()
    face_gray,face_img = face_extractor(img)
    if face_gray is not None:
        count += 1
        cv2.putText(img,str(count),(100,100),cv2.FONT_HERSHEY_COMPLEX,1,(0,255,0),4)
        # Save the captured image into the datasets folder
        cv2.imwrite("/home/osboxes/PycharmProjects/Face-Detection-and-Recognition/datasets/User." + str(face_id) + '.' +
                    str(count) + ".jpg", face_gray)
    else:
        cv2.putText(img,'Face Not Found',(300,300),cv2.FONT_HERSHEY_COMPLEX,1,(0,255,0),4)

    cv2.imshow('image', img)

    if cv2.waitKey(100) & 0xff == 27: # Press 'ESC' for exiting video
        break
    elif count >= 30: # Take 30 face sample and stop video
         break

# Do a bit of cleanup
print("\n [INFO] Exiting Program and cleanup stuff")
cam.release()
cv2.destroyAllWindows()
