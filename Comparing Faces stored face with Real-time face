import cv2
import numpy as np
from os import listdir
from os.path import isfile, join

data_path = 'C:/Users/Acer/Desktop/Faces/'

onlyfiles = [f for f in listdir(data_path)if isfile(join(data_path,f))]
Training_data, Labels = [], [] #Two Empty List

for i, files in enumerate(onlyfiles):
    image_path = data_path + files
    images = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
    Training_data.append(np.asarray(images, dtype=np.uint8))
    Labels.append(i)


Labels = np.asarray(Labels, dtype=np.int32)

#install "opencv-contrib-python"
model = cv2.face.LBPHFaceRecognizer_create()
model.train(np.asarray(Training_data), np.asarray(Labels))

print('Model Training Complete!!!')

#Comparing Faces stored face and Realtime face

face_classifier = cv2.CascadeClassifier('C:/Users/Acer/AppData/Local/Programs/Python/Python38/Lib/site-packages/cv2/data/haarcascade_frontalface_default.xml')

def face_detector(image, size = 0.5):
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    face = face_classifier.detectMultiScale(gray,1.3,5)

    if face ==():
        return image,[]

    for (x,y,w,h) in face:
        cv2.rectangle(image,(x,y),(x+w,y+h),(0,255,0),5)
        cv2.rectangle(image,(x,y+h),(x+w,y+h+40),(0,255,0),-1)
       # cv2.putText(image,'Ashish',(int((x+30)),int((y+h+30))),cv2.FONT_HERSHEY_COMPLEX,1,(0,0,0),2)
        roi = image[y:y+h, x:x+w]#resone of interset
        roi = cv2.resize(roi,(200,200))

    return image,roi

cap = cv2.VideoCapture(0)

while True:
    ret,frame = cap.read()
    image, face = face_detector(frame)

    try:
        face = cv2.cvtColor(face,cv2.COLOR_BGR2GRAY)
        result = model.predict(face)
        if result[1] < 500:
            confidence = int(100*(1-(result[1])/300))
            display_string = str(confidence)+'% Confidence it is user'
        cv2.putText(image,display_string,(100,120),cv2.FONT_HERSHEY_COMPLEX,1,(250,120,255),2)

        if confidence > 75:
            cv2.putText(image, "Unlocked", (255, 450), cv2.FONT_HERSHEY_COMPLEX, 1, (0, 255,0), 2)
            cv2.imshow('Face cropper',image)
        else:
            cv2.putText(image, "Locked", (255, 450), cv2.FONT_HERSHEY_COMPLEX, 1, (0, 0, 255), 2)
            cv2.imshow('Face cropper', image)

    except:
        cv2.putText(image, "Face Not Found", (255, 450), cv2.FONT_HERSHEY_COMPLEX, 1, (255, 0, 0), 2)
        cv2.imshow('Face cropper', image)
        pass

    if cv2.waitKey(10)==13:
        break

cap.release()
cv2.destroyAllWindows()
